apply plugin: 'com.android.application'
apply plugin: "org.sonarqube"
apply from: '../gradle-scripts/jacoco.gradle'

android {
  compileSdkVersion Android.compileSdkVersion

  defaultConfig {
    applicationId Android.applicationId
    minSdkVersion Android.minSdkVersion
    targetSdkVersion Android.targetSdkVersion
    versionCode Android.versionCode
    versionName Android.versionName
    multiDexEnabled true
    vectorDrawables.useSupportLibrary = true
    buildConfigField 'String', 'NEWS_API', findProperty("NEWS_API_KEY") ?: ""
    buildConfigField 'String', 'SPKI', findProperty("SPKI") ?: ""
  }

  signingConfigs {
    config {
      def keystorePropertiesFile = rootProject.file("keystore/release-keystore.properties")
      def keystoreProperties = new Properties()
      keystoreProperties.load(new FileInputStream(keystorePropertiesFile))

      keyAlias keystoreProperties['keyAlias']
      keyPassword keystoreProperties['keyPassword']
      storeFile file(keystoreProperties['storeFile'])
      storePassword keystoreProperties['storePassword']
    }
  }

  buildTypes {
    debug {
      applicationIdSuffix '.debug'
      versionNameSuffix '-DEBUG'
      testCoverageEnabled true
    }
    release {
      minifyEnabled true
      shrinkResources true
      signingConfig signingConfigs.config
      proguardFiles getDefaultProguardFile(
              'proguard-android-optimize.txt'),
              'proguard-rules.pro'
    }
  }

  packagingOptions {
    exclude 'META-INF/services/javax.annotation.processing.Processor'
    exclude 'META-INF/LICENSE'
    exclude 'META-INF/LICENSE.txt'
  }

  compileOptions {
    sourceCompatibility JavaVersion.VERSION_1_8
    targetCompatibility JavaVersion.VERSION_1_8
  }

  lintOptions {
    abortOnError false
  }

  buildFeatures {
     viewBinding true
  }

  flavorDimensions("flavorDimen")
  productFlavors {
    create("dev") {
      applicationIdSuffix = ".dev"
      buildConfigField("String", "BASE_URL", '"https://api.currentsapi.services/v1/"')
    }
    create("pre") {
      applicationIdSuffix = ".pre"
      buildConfigField("String", "BASE_URL", '"https://api.currentsapi.services/v1/"')
    }
    create("pro") {
      buildConfigField("String", "BASE_URL", '"https://api.currentsapi.services/v1/"')
    }
  }
}

buildscript {
  repositories {
    jcenter()
  }
  dependencies {
    classpath "org.sonarsource.scanner.gradle:sonarqube-gradle-plugin:2.7.1"
    classpath "org.jacoco:org.jacoco.core:0.8.5"
  }
}

dependencies {

  implementation AndroidXdependencies.appCompat
  implementation AndroidXdependencies.material
  implementation AndroidXdependencies.annotation
  implementation AndroidXdependencies.multidex
  implementation AndroidXdependencies.constraintlayout

  implementation DaggerDependencies.dagger
  annotationProcessor DaggerDependencies.daggerCompiler
  implementation DaggerDependencies.daggerAndroidSupport
  annotationProcessor DaggerDependencies.daggerAndroidProcessor

  implementation RxDependencies.rxJava
  implementation RxDependencies.rxAndroid
  implementation RxDependencies.rxAdapter

  implementation RetrofitDependencies.retrofit
  implementation RetrofitDependencies.converterGson
  implementation RetrofitDependencies.adapterRxjava2

  implementation OkhttpDependencies.okhttp
  implementation OkhttpDependencies.loggingInterceptor

  annotationProcessor RoomDependencies.compiler
  implementation RoomDependencies.runtime
  implementation RoomDependencies.rxjava3

  implementation Gson

  implementation GlideDependencies.core
  annotationProcessor GlideDependencies.compiler
  implementation GlideDependencies.recyclerIntegration

  implementation StethoDependencies.core
  implementation StethoDependencies.okhttp

  testImplementation TestingDependencies.junit
  testImplementation TestingDependencies.mockito
  testImplementation TestingDependencies.hamcrest

}

sonarqube {
  properties {
    property "sonar.projectName", "Clean - Android"
    property "sonar.projectKey", "$Android.applicationId"
    property "sonar.tests", ["src/test/java"]
    property "sonar.test.inclusions", "**/*Test*/**"
    property "sonar.sourceEncoding", "UTF-8"
    property "sonar.sources", "src/main/java"
    property "sonar.exclusions", '**/*Test*/**,' +
            '*.json,' +
            '**/*test*/**,' +
            '**/.gradle/**,' +
            '**/R.class'
    property "sonar.java.coveragePlugin", "jacoco"
    property "sonar.jacoco.reportPath", "**/jacoco/*.exec"
  }
}

tasks.sonarqube.dependsOn ":app:testDevDebugUnitTestCoverage"
